name: Build SQLite Remote Table Extension

on:
  push:
    branches: [ main ]

jobs:
  build:
    name: Build for ${{ matrix.os }} / ${{ matrix.arch }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: windows-latest
            arch: x64
            artifact: remotetable.dll
          - os: ubuntu-latest
            arch: arm64
            artifact: remotetable_arm64.so

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # ----------------------
      # Linux caching
      # ----------------------
      - name: Cache APT packages
        if: matrix.os == 'ubuntu-latest'
        uses: actions/cache@v4
        with:
          path: |
            /var/cache/apt
            /var/lib/apt/lists
          key: ${{ runner.os }}-apt-${{ hashFiles('**/extension/*.c', '**/extension/*.h') }}
          restore-keys: |
            ${{ runner.os }}-apt-

      - name: Install dependencies (Linux cross-compilers)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc make pkg-config libsqlite3-dev libcurl4-openssl-dev \
            gcc-arm-linux-gnueabihf gcc-aarch64-linux-gnu ccache

      # ----------------------
      # Windows caching
      # ----------------------
      - name: Cache Chocolatey packages
        if: matrix.os == 'windows-latest'
        uses: actions/cache@v4
        with:
          path: C:\ProgramData\chocolatey\lib
          key: ${{ runner.os }}-choco-${{ hashFiles('**/extension/*.c', '**/extension/*.h') }}
          restore-keys: |
            ${{ runner.os }}-choco-

      - name: Install dependencies (Windows MinGW)
        if: matrix.os == 'windows-latest'
        run: |
          choco install mingw sqlite curl -y
          echo "C:\ProgramData\chocolatey\lib\mingw\tools\install\mingw64\bin" >> $GITHUB_PATH

      # ----------------------
      # Build steps
      # ----------------------
      - name: Build on Windows (MinGW)
        if: matrix.os == 'windows-latest'
        run: |
          gcc -shared -o ${{ matrix.artifact }} extension/remote_table.c extension/cJSON.c -Iextension -IC:/ProgramData/chocolatey/lib/sqlite/tools/sqlite3/include -IC:/ProgramData/chocolatey/lib/curl/include -LC:/ProgramData/chocolatey/lib/sqlite/tools/sqlite3 -LC:/ProgramData/chocolatey/lib/curl/lib -lsqlite3 -lcurl

      - name: Build for Raspberry Pi (arm64)
        if: matrix.arch == 'arm64'
        run: |
          aarch64-linux-gnu-gcc -fPIC -shared -o ${{ matrix.artifact }} extension/remote_table.c extension/cJSON.c \
            -Iextension $(pkg-config --cflags --libs sqlite3 libcurl)

      # ----------------------
      # Upload artifacts
      # ----------------------
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact }}
          path: ${{ matrix.artifact }}